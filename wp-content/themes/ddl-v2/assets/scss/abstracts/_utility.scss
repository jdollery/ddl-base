/*-----------------------------------------------------------------------------------*/
/* BLOCK */
/*-----------------------------------------------------------------------------------*/

$block-padding-sm: 2rem;
$block-padding-md: 4rem;
$block-padding-lg: 8rem;
$block-padding-xl: 8rem;

$block-breakpoint-tablet: sm;
$block-breakpoint-laptop: lg;
$block-breakpoint-desktop: xxl;

@mixin direction($tag) {

  @if $tag == 'y' {
    padding-top: $block-padding-sm;
    padding-bottom: $block-padding-sm;

    @include media-up($block-breakpoint-tablet) {
      padding-top: $block-padding-md;
      padding-bottom: $block-padding-md;
    }

    @include media-up($block-breakpoint-laptop) {
      padding-top: $block-padding-lg;
      padding-bottom: $block-padding-lg;
    }

    @include media-up($block-breakpoint-desktop) {
      padding-top: $block-padding-xl;
      padding-bottom: $block-padding-xl;
    }

  }

  @if $tag == 'x' {
    padding-left: $block-padding-sm;
    padding-right: $block-padding-sm;

    @include media-up($block-breakpoint-tablet) {
      padding-left: $block-padding-md;
      padding-right: $block-padding-md;
    }

    @include media-up($block-breakpoint-laptop) {
      padding-left: $block-padding-lg;
      padding-right: $block-padding-lg;
    }

    @include media-up($block-breakpoint-desktop) {
      padding-left: $block-padding-xl;
      padding-right: $block-padding-xl;
    }

  }

  @if $tag == 'top' {
    padding-top: $block-padding-sm;

    @include media-up($block-breakpoint-tablet) {
      padding-top: $block-padding-md;
    }

    @include media-up($block-breakpoint-laptop) {
      padding-top: $block-padding-lg;
    }

    @include media-up($block-breakpoint-desktop) {
      padding-top: $block-padding-xl;
    }

  }

  @if $tag == 'bottom' {
    padding-bottom: $block-padding-sm;

    @include media-up($block-breakpoint-tablet) {
      padding-bottom: $block-padding-md;
    }

    @include media-up($block-breakpoint-laptop) {
      padding-bottom: $block-padding-lg;
    }

    @include media-up($block-breakpoint-desktop) {
      padding-bottom: $block-padding-xl;
    }

  }

  @if $tag == 'left' {
    padding-left: $block-padding-sm;

    @include media-up($block-breakpoint-tablet) {
      padding-left: $block-padding-md;
    }

    @include media-up($block-breakpoint-laptop) {
      padding-left: $block-padding-lg;
    }

    @include media-up($block-breakpoint-desktop) {
      padding-left: $block-padding-xl;
    }

  }

  @if $tag == 'right' {
    padding-right: $block-padding-sm;

    @include media-up($block-breakpoint-tablet) {
      padding-right: $block-padding-md;
    }

    @include media-up($block-breakpoint-laptop) {
      padding-right: $block-padding-lg;
    }

    @include media-up($block-breakpoint-desktop) {
      padding-right: $block-padding-xl;
    }

  }

}


$tags: top, bottom, right, left;

@each $prop, $abbrev in (margin: m, padding: p) {
  @each $tag in $tags {

    .block-#{$abbrev},
    .block-#{$abbrev}-t,
    .block-#{$abbrev}-y {

      #{$prop}-top : $block-padding-sm;

      @include media-up($block-breakpoint-tablet) {
        #{$prop}-top : $block-padding-md;
      }

      @include media-up($block-breakpoint-laptop) {
        #{$prop}-top : $block-padding-lg;
      }

      @include media-up($block-breakpoint-desktop) {
        #{$prop}-top : $block-padding-xl;
      }

    }

    .block-#{$abbrev},
    .block-#{$abbrev}-b,
    .block-#{$abbrev}-y {

      #{$prop}-bottom : $block-padding-sm;

      @include media-up($block-breakpoint-tablet) {
        #{$prop}-bottom : $block-padding-md;
      }

      @include media-up($block-breakpoint-laptop) {
        #{$prop}-bottom : $block-padding-lg;
      }

      @include media-up($block-breakpoint-desktop) {
        #{$prop}-bottom : $block-padding-xl;
      }

    }

    .block-#{$abbrev},
    .block-#{$abbrev}-l,
    .block-#{$abbrev}-x {

      #{$prop}-left : $block-padding-sm;

      @include media-up($block-breakpoint-tablet) {
        #{$prop}-left : $block-padding-md;
      }

      @include media-up($block-breakpoint-laptop) {
        #{$prop}-left : $block-padding-lg;
      }

      @include media-up($block-breakpoint-desktop) {
        #{$prop}-left : $block-padding-xl;
      }

    }

    .block-#{$abbrev},
    .block-#{$abbrev}-r,
    .block-#{$abbrev}-x {

      #{$prop}-right : $block-padding-sm;

      @include media-up($block-breakpoint-tablet) {
        #{$prop}-right : $block-padding-md;
      }

      @include media-up($block-breakpoint-laptop) {
        #{$prop}-right : $block-padding-lg;
      }

      @include media-up($block-breakpoint-desktop) {
        #{$prop}-right : $block-padding-xl;
      }

    }

  }
  
}


/*-----------------------------------------------------------------------------------*/
/* FONT SIZE */
/*-----------------------------------------------------------------------------------*/

@mixin fluid-type(
  $sm-font-size: $body-size-sm,
  $md-font-size: $body-size-lg,
  $lg-font-size: $body-size-lg,
  $md-breakpoint: map-get($breakpoint-widths, "md"),
  $lg-breakpoint: map-get($breakpoint-widths, "xxl")
) {

  font-size: $sm-font-size;

  @media (min-width: $md-breakpoint) {
    font-size: $md-font-size;
  }

  @media (min-width: $lg-breakpoint) {
    font-size: $lg-font-size;
  }

}


/*-----------------------------------------------------------------------------------*/
/* BACKGROUND COLOUR */
/*-----------------------------------------------------------------------------------*/

@each $name, $color in $colors {
  .bg-#{$name} {
    background: $color;
  }
}


/*-----------------------------------------------------------------------------------*/
/* MARGIN AND PADDING */
/*-----------------------------------------------------------------------------------*/

$spacer: 1rem !default;
$spacers: () !default;
$spacers: map-merge(
  (
    0:  0,
    1:  ($spacer * .25),
    2:  ($spacer * .5),
    3:  $spacer,
    4:  ($spacer * 1.5),
    5:  ($spacer * 2),
    6:  ($spacer * 2.5),
    7:  ($spacer * 3),
    8:  ($spacer * 3.5),
    9:  ($spacer * 4),
    10: ($spacer * 4.5),
    11: ($spacer * 5),
    12: ($spacer * 5.5),
    13: ($spacer * 6),
    14: ($spacer * 6.5),
    15: ($spacer * 7),
    16: ($spacer * 7.5),
    17: ($spacer * 8),
    18: ($spacer * 8.5),
    19: ($spacer * 9),
    20: ($spacer * 9.5),
    21: ($spacer * 10),
    22: ($spacer * 10.5),
    23: ($spacer * 11),
    24: ($spacer * 11.5),
    25: ($spacer * 12),
    26: ($spacer * 12.5),
    27: ($spacer * 13),
    28: ($spacer * 13.5),
    29: ($spacer * 14),
    30: ($spacer * 14.5),
    31: ($spacer * 15),
    32: ($spacer * 15.5),
    33: ($spacer * 16),
    34: ($spacer * 16.5),
    35: ($spacer * 17),
    36: ($spacer * 17.5),
    37: ($spacer * 18),
    38: ($spacer * 18.5),
    39: ($spacer * 19),
    40: ($spacer * 19.5),
    41: ($spacer * 20)
  ),
  $spacers
);

@each $prop, $abbrev in (margin: m, padding: p) {
  @each $size, $length in $spacers {

    .#{$abbrev}-#{$size},
    .#{$abbrev}t-#{$size},
    .#{$abbrev}y-#{$size} {
      #{$prop}-top: $length !important;
    }

    .#{$abbrev}-#{$size},
    .#{$abbrev}r-#{$size},
    .#{$abbrev}x-#{$size} {
      #{$prop}-right: $length !important;
    }

    .#{$abbrev}-#{$size},
    .#{$abbrev}b-#{$size},
    .#{$abbrev}y-#{$size} {
      #{$prop}-bottom: $length !important;
    }

    .#{$abbrev}-#{$size},
    .#{$abbrev}l-#{$size},
    .#{$abbrev}x-#{$size}  {
      #{$prop}-left: $length !important;
    }
  }
  
}

@each $breakpoint in map-keys($breakpoint-widths) {
  @include media-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $breakpoint-widths);

    @each $prop, $abbrev in (margin: m, padding: p) {
      @each $size, $length in $spacers {

        .#{$abbrev}#{$infix}-#{$size} { #{$prop}: $length !important; }
        .#{$abbrev}t#{$infix}-#{$size},
        .#{$abbrev}y#{$infix}-#{$size} {
          #{$prop}-top: $length !important;
        }

        .#{$abbrev}r#{$infix}-#{$size},
        .#{$abbrev}x#{$infix}-#{$size} {
          #{$prop}-right: $length !important;
        }

        .#{$abbrev}b#{$infix}-#{$size},
        .#{$abbrev}y#{$infix}-#{$size} {
          #{$prop}-bottom: $length !important;
        }

        .#{$abbrev}l#{$infix}-#{$size},
        .#{$abbrev}x#{$infix}-#{$size}  {
          #{$prop}-left: $length !important;
        }
        
      }
      
    }

  }

}

.mx-auto {
  margin-right: auto!important;
  margin-left: auto!important;
}


/*-----------------------------------------------------------------------------------*/
/* TEXT ALIGN */
/*-----------------------------------------------------------------------------------*/

.t-center { text-align: center !important; }
.t-right  { text-align: right !important; }
.t-left   { text-align: left !important; }

@each $breakpoint in map-keys($breakpoint-widths) {

  @include media-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $breakpoint-widths);

    .t#{$infix}-left   { text-align: left !important; }
    .t#{$infix}-right  { text-align: right !important; }
    .t#{$infix}-center { text-align: center !important; }
  }

}


/*-----------------------------------------------------------------------------------*/
/* FLEX ALIGN */
/*-----------------------------------------------------------------------------------*/

.cell { 

  $justify-positions: (
    start: flex-start,
    end: flex-end,
    center: center,
    around: space-around,
    between: space-between,
    evenly: space-evenly
  );

  $align-positions: (
    start: flex-start,
    end: flex-end,
    center: center,
    stretch: stretch,
    baseline: baseline
  );

  @mixin just-align($name,$prop,$arr) {
    @each $mod, $dir in $arr {
      &-#{$name}-#{$mod} {
          #{$prop}: #{$dir};
      }
    }
  }

  @include just-align('align','align-items', $align-positions);
  @include just-align('justify','justify-content', $justify-positions);

}


/*-----------------------------------------------------------------------------------*/
/* HIDDEN */
/*-----------------------------------------------------------------------------------*/

@mixin hidden($breakpoints: $breakpoint-widths) {
  @each $breakpoint in $breakpoints {
    @include media-up ($breakpoint) {
      display: none !important;
    }
  }
}


@mixin visible($breakpoints: $breakpoint-widths) {
  @each $breakpoint in $breakpoints {
    @include media-down ($breakpoint) {
      display: none !important;
    }
  }
}

.hidden {
  display: none;

  &-xs {
    @include hidden(md);
  }

  &-sm {
    @include hidden(md);
  }

  &-md {
    @include hidden(md);
  }

  &-lg {
    @include hidden(lg);
  }

}

.visible {

  &-xs {
    @include visible(md);
  }

  &-sm {
    @include visible(md);
  }

  &-md {
    @include visible(md);
  }

  &-lg {
    @include visible(lg);
  }

}